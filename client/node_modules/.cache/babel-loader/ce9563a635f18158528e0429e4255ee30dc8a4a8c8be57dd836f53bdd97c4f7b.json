{"ast":null,"code":"var _jsxFileName = \"/Users/vladkeykey/Desktop/projectsKeyKey/wixi/admin-panel/wixi-admin-panel/client/src/components/atomic/pages/AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AdminTemplate from '../templates/AdminTemplate';\nimport { fetchCategories, fetchProducts, createCategory, createProduct, updateCategory, updateProduct } from '../../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [productToEdit, setProductToEdit] = useState(null);\n  const [categoryToEdit, setCategoryToEdit] = useState(null); // Состояние для редактируемой категории\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const fetchedCategories = await fetchCategories();\n        const fetchedProducts = await fetchProducts();\n        setCategories(fetchedCategories);\n        setProducts(fetchedProducts);\n      } catch (err) {\n        setError('Failed to load data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n  const handleCreateCategory = async data => {\n    try {\n      const newCategory = await createCategory(data);\n      setCategories([...categories, newCategory]);\n      setCategoryToEdit(null); // Сбросить редактируемую категорию после создания\n    } catch (err) {\n      setError('Failed to create category.');\n    }\n  };\n  const handleEditCategory = async (id, updatedData) => {\n    try {\n      const updatedCategory = await updateCategory(id, updatedData);\n      setCategories(categories.map(cat => cat._id === id ? updatedCategory : cat));\n      setCategoryToEdit(null); // Сбросить редактируемую категорию после обновления\n    } catch (err) {\n      setError('Failed to update category.');\n    }\n  };\n  const handleEditCategoryInitiate = category => {\n    setCategoryToEdit(category);\n  };\n\n  // Обработчик для редактирования продукта\n  const handleEditProductInitiate = product => {\n    setProductToEdit(product);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AdminTemplate, {\n    categories: categories,\n    products: products,\n    onCreateCategory: handleCreateCategory,\n    onEditCategory: handleEditCategory,\n    onCreateProduct: handleCreateProduct,\n    onEditProduct: handleEditProduct,\n    productToEdit: productToEdit,\n    categoryToEdit: categoryToEdit // Передаем редактируемую категорию\n    ,\n    onEditProductInitiate: handleEditProductInitiate,\n    onEditCategoryInitiate: handleEditCategoryInitiate // Передаем функцию для инициации редактирования категории\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminPage, \"P34bmasfbQbhE+9wliHW8ngoGJo=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","AdminTemplate","fetchCategories","fetchProducts","createCategory","createProduct","updateCategory","updateProduct","jsxDEV","_jsxDEV","AdminPage","_s","categories","setCategories","products","setProducts","loading","setLoading","error","setError","productToEdit","setProductToEdit","categoryToEdit","setCategoryToEdit","loadData","fetchedCategories","fetchedProducts","err","handleCreateCategory","data","newCategory","handleEditCategory","id","updatedData","updatedCategory","map","cat","_id","handleEditCategoryInitiate","category","handleEditProductInitiate","product","children","fileName","_jsxFileName","lineNumber","columnNumber","onCreateCategory","onEditCategory","onCreateProduct","handleCreateProduct","onEditProduct","handleEditProduct","onEditProductInitiate","onEditCategoryInitiate","_c","$RefreshReg$"],"sources":["/Users/vladkeykey/Desktop/projectsKeyKey/wixi/admin-panel/wixi-admin-panel/client/src/components/atomic/pages/AdminPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AdminTemplate from '../templates/AdminTemplate';\nimport { fetchCategories, fetchProducts, createCategory, createProduct, updateCategory, updateProduct } from '../../../services/api';\n\nconst AdminPage = () => {\n    const [categories, setCategories] = useState([]);\n    const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [productToEdit, setProductToEdit] = useState(null);\n    const [categoryToEdit, setCategoryToEdit] = useState(null); // Состояние для редактируемой категории\n\n    useEffect(() => {\n        const loadData = async () => {\n            try {\n                const fetchedCategories = await fetchCategories();\n                const fetchedProducts = await fetchProducts();\n                setCategories(fetchedCategories);\n                setProducts(fetchedProducts);\n            } catch (err) {\n                setError('Failed to load data.');\n            } finally {\n                setLoading(false);\n            }\n        };\n        loadData();\n    }, []);\n\n    const handleCreateCategory = async (data) => {\n        try {\n            const newCategory = await createCategory(data);\n            setCategories([...categories, newCategory]);\n            setCategoryToEdit(null); // Сбросить редактируемую категорию после создания\n        } catch (err) {\n            setError('Failed to create category.');\n        }\n    };\n\n    const handleEditCategory = async (id, updatedData) => {\n        try {\n            const updatedCategory = await updateCategory(id, updatedData);\n            setCategories(categories.map(cat => (cat._id === id ? updatedCategory : cat)));\n            setCategoryToEdit(null); // Сбросить редактируемую категорию после обновления\n        } catch (err) {\n            setError('Failed to update category.');\n        }\n    };\n\n    const handleEditCategoryInitiate = (category) => {\n        setCategoryToEdit(category);\n    };\n\n    // Обработчик для редактирования продукта\n    const handleEditProductInitiate = (product) => {\n        setProductToEdit(product);\n    };\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div>{error}</div>;\n    }\n\n    return (\n        <AdminTemplate\n            categories={categories}\n            products={products}\n            onCreateCategory={handleCreateCategory}\n            onEditCategory={handleEditCategory}\n            onCreateProduct={handleCreateProduct}\n            onEditProduct={handleEditProduct}\n            productToEdit={productToEdit}\n            categoryToEdit={categoryToEdit} // Передаем редактируемую категорию\n            onEditProductInitiate={handleEditProductInitiate}\n            onEditCategoryInitiate={handleEditCategoryInitiate} // Передаем функцию для инициации редактирования категории\n        />\n    );\n};\n\nexport default AdminPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}