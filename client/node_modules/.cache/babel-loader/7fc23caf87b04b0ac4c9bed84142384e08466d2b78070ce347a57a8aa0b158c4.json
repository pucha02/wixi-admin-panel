{"ast":null,"code":"var _jsxFileName = \"/Users/vladkeykey/Desktop/projectsKeyKey/wixi/admin-panel/wixi-admin-panel/client/src/components/atomic/pages/AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AdminTemplate from '../templates/AdminTemplate';\nimport { fetchCategories, fetchProducts, createCategory, createProduct, updateCategory, updateProduct } from '../../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [productToEdit, setProductToEdit] = useState(null); // Состояние для редактируемого продукта\n\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const fetchedCategories = await fetchCategories();\n        const fetchedProducts = await fetchProducts();\n        setCategories(fetchedCategories);\n        setProducts(fetchedProducts);\n      } catch (err) {\n        setError('Failed to load data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n  const handleCreateCategory = async data => {\n    try {\n      const newCategory = await createCategory(data);\n      setCategories([...categories, newCategory]);\n    } catch (err) {\n      setError('Failed to create category.');\n    }\n  };\n  const handleCreateProduct = async data => {\n    try {\n      const newProduct = await createProduct(data);\n      setProducts([...products, newProduct]);\n      setProductToEdit(null); // Сбросить редактируемый продукт после создания\n    } catch (err) {\n      setError('Failed to create product.');\n    }\n  };\n  const handleEditProduct = async (id, updatedData) => {\n    try {\n      const updatedProduct = await updateProduct(id, updatedData);\n      setProducts(products.map(prod => prod._id === id ? updatedProduct : prod));\n      setProductToEdit(null); // Сбросить редактируемый продукт после обновления\n    } catch (err) {\n      setError('Failed to update product.');\n    }\n  };\n\n  // Обработчик для редактирования продукта\n  const handleEditInitiate = product => {\n    setProductToEdit(product);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AdminTemplate, {\n    categories: categories,\n    products: products,\n    onCreateCategory: handleCreateCategory,\n    onCreateProduct: handleCreateProduct,\n    onEditProduct: handleEditProduct,\n    productToEdit: productToEdit // Передаем редактируемый продукт\n    ,\n    onEditInitiate: handleEditInitiate // Передаем функцию для инициации редактирования\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminPage, \"cj6NpAKibo1bj+K17fKblnbuZoI=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","AdminTemplate","fetchCategories","fetchProducts","createCategory","createProduct","updateCategory","updateProduct","jsxDEV","_jsxDEV","AdminPage","_s","categories","setCategories","products","setProducts","loading","setLoading","error","setError","productToEdit","setProductToEdit","loadData","fetchedCategories","fetchedProducts","err","handleCreateCategory","data","newCategory","handleCreateProduct","newProduct","handleEditProduct","id","updatedData","updatedProduct","map","prod","_id","handleEditInitiate","product","children","fileName","_jsxFileName","lineNumber","columnNumber","onCreateCategory","onCreateProduct","onEditProduct","onEditInitiate","_c","$RefreshReg$"],"sources":["/Users/vladkeykey/Desktop/projectsKeyKey/wixi/admin-panel/wixi-admin-panel/client/src/components/atomic/pages/AdminPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AdminTemplate from '../templates/AdminTemplate';\nimport { fetchCategories, fetchProducts, createCategory, createProduct, updateCategory, updateProduct } from '../../../services/api';\n\nconst AdminPage = () => {\n    const [categories, setCategories] = useState([]);\n    const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [productToEdit, setProductToEdit] = useState(null); // Состояние для редактируемого продукта\n\n    useEffect(() => {\n        const loadData = async () => {\n            try {\n                const fetchedCategories = await fetchCategories();\n                const fetchedProducts = await fetchProducts();\n                setCategories(fetchedCategories);\n                setProducts(fetchedProducts);\n            } catch (err) {\n                setError('Failed to load data.');\n            } finally {\n                setLoading(false);\n            }\n        };\n        loadData();\n    }, []);\n\n    const handleCreateCategory = async (data) => {\n        try {\n            const newCategory = await createCategory(data);\n            setCategories([...categories, newCategory]);\n        } catch (err) {\n            setError('Failed to create category.');\n        }\n    };\n\n    const handleCreateProduct = async (data) => {\n        try {\n            const newProduct = await createProduct(data);\n            setProducts([...products, newProduct]);\n            setProductToEdit(null); // Сбросить редактируемый продукт после создания\n        } catch (err) {\n            setError('Failed to create product.');\n        }\n    };\n\n    const handleEditProduct = async (id, updatedData) => {\n        try {\n            const updatedProduct = await updateProduct(id, updatedData);\n            setProducts(products.map(prod => (prod._id === id ? updatedProduct : prod)));\n            setProductToEdit(null); // Сбросить редактируемый продукт после обновления\n        } catch (err) {\n            setError('Failed to update product.');\n        }\n    };\n\n    // Обработчик для редактирования продукта\n    const handleEditInitiate = (product) => {\n        setProductToEdit(product);\n    };\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div>{error}</div>;\n    }\n\n    return (\n        <AdminTemplate\n            categories={categories}\n            products={products}\n            onCreateCategory={handleCreateCategory}\n            onCreateProduct={handleCreateProduct}\n            onEditProduct={handleEditProduct}\n            productToEdit={productToEdit} // Передаем редактируемый продукт\n            onEditInitiate={handleEditInitiate} // Передаем функцию для инициации редактирования\n        />\n    );\n};\n\nexport default AdminPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}