{"ast":null,"code":"var _jsxFileName = \"/Users/vladkeykey/Desktop/projectsKeyKey/wixi/admin-panel/wixi-admin-panel/client/src/components/atomic/pages/AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AdminTemplate from '../templates/AdminTemplate';\nimport { fetchCategories, fetchProducts, createCategory, createProduct, updateCategory, updateProduct } from '../../../services/api'; // добавлены updateCategory и updateProduct\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [products, setProducts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const fetchedCategories = await fetchCategories();\n        const fetchedProducts = await fetchProducts();\n        setCategories(fetchedCategories);\n        setProducts(fetchedProducts);\n      } catch (err) {\n        setError('Failed to load data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadData();\n  }, []);\n  const handleCreateCategory = async data => {\n    try {\n      const newCategory = await createCategory(data);\n      setCategories([...categories, newCategory]);\n    } catch (err) {\n      setError('Failed to create category.');\n    }\n  };\n  const handleCreateProduct = async data => {\n    try {\n      const newProduct = await createProduct(data);\n      setProducts([...products, newProduct]);\n    } catch (err) {\n      setError('Failed to create product.');\n    }\n  };\n  const handleEditCategory = async (id, updatedData) => {\n    try {\n      const updatedCategory = await updateCategory(id, updatedData);\n      setCategories(categories.map(cat => cat._id === id ? updatedCategory : cat)); // обновляем категорию в списке\n    } catch (err) {\n      setError('Failed to update category.');\n    }\n  };\n  const handleEditProduct = async (id, updatedData) => {\n    try {\n      const updatedProduct = await updateProduct(id, updatedData);\n      setProducts(products.map(prod => prod._id === id ? updatedProduct : prod)); // обновляем продукт в списке\n    } catch (err) {\n      setError('Failed to update product.');\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AdminTemplate, {\n    categories: categories,\n    products: products,\n    onCreateCategory: handleCreateCategory,\n    onCreateProduct: handleCreateProduct,\n    onEditCategory: handleEditCategory // передаем функцию редактирования категории\n    ,\n    onEditProduct: handleEditProduct // передаем функцию редактирования продукта\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminPage, \"E/TZEaigu81KqrfICGqfj3to/z4=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","AdminTemplate","fetchCategories","fetchProducts","createCategory","createProduct","updateCategory","updateProduct","jsxDEV","_jsxDEV","AdminPage","_s","categories","setCategories","products","setProducts","loading","setLoading","error","setError","loadData","fetchedCategories","fetchedProducts","err","handleCreateCategory","data","newCategory","handleCreateProduct","newProduct","handleEditCategory","id","updatedData","updatedCategory","map","cat","_id","handleEditProduct","updatedProduct","prod","children","fileName","_jsxFileName","lineNumber","columnNumber","onCreateCategory","onCreateProduct","onEditCategory","onEditProduct","_c","$RefreshReg$"],"sources":["/Users/vladkeykey/Desktop/projectsKeyKey/wixi/admin-panel/wixi-admin-panel/client/src/components/atomic/pages/AdminPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport AdminTemplate from '../templates/AdminTemplate';\nimport { fetchCategories, fetchProducts, createCategory, createProduct, updateCategory, updateProduct } from '../../../services/api'; // добавлены updateCategory и updateProduct\n\nconst AdminPage = () => {\n    const [categories, setCategories] = useState([]);\n    const [products, setProducts] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const loadData = async () => {\n            try {\n                const fetchedCategories = await fetchCategories();\n                const fetchedProducts = await fetchProducts();\n                setCategories(fetchedCategories);\n                setProducts(fetchedProducts);\n            } catch (err) {\n                setError('Failed to load data.');\n            } finally {\n                setLoading(false);\n            }\n        };\n        loadData();\n    }, []);\n\n    const handleCreateCategory = async (data) => {\n        try {\n            const newCategory = await createCategory(data);\n            setCategories([...categories, newCategory]);\n        } catch (err) {\n            setError('Failed to create category.');\n        }\n    };\n\n    const handleCreateProduct = async (data) => {\n        try {\n            const newProduct = await createProduct(data);\n            setProducts([...products, newProduct]);\n        } catch (err) {\n            setError('Failed to create product.');\n        }\n    };\n\n    const handleEditCategory = async (id, updatedData) => {\n        try {\n            const updatedCategory = await updateCategory(id, updatedData);\n            setCategories(categories.map(cat => cat._id === id ? updatedCategory : cat)); // обновляем категорию в списке\n        } catch (err) {\n            setError('Failed to update category.');\n        }\n    };\n\n    const handleEditProduct = async (id, updatedData) => {\n        try {\n            const updatedProduct = await updateProduct(id, updatedData);\n            setProducts(products.map(prod => prod._id === id ? updatedProduct : prod)); // обновляем продукт в списке\n        } catch (err) {\n            setError('Failed to update product.');\n        }\n    };\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div>{error}</div>;\n    }\n\n    return (\n        <AdminTemplate\n            categories={categories}\n            products={products}\n            onCreateCategory={handleCreateCategory}\n            onCreateProduct={handleCreateProduct}\n            onEditCategory={handleEditCategory}  // передаем функцию редактирования категории\n            onEditProduct={handleEditProduct}    // передаем функцию редактирования продукта\n        />\n    );\n};\n\nexport default AdminPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}